--> ((0, 0), U) 1 1 
processing LightPath { path: [((0, 0), U)], stop: true, found: false, child: [] }
collect value for 0 0, U --> LightPathMap { paths: {(0, 0)}, child: [] }
--> collected Some(LightPathMap { paths: {(0, 0)}, child: [] }) 1
process at (0, 0, U)
--> ((0, 0), D) 10 10 
processing LightPath { path: [((0, 0), D), ((1, 0), D), ((2, 0), D), ((3, 0), D), ((4, 0), D), ((5, 0), D), ((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)], stop: true, found: false, child: [] }
collect value for 9 0, D --> LightPathMap { paths: {(9, 0)}, child: [] }
collect value for 8 0, D --> LightPathMap { paths: {(8, 0), (9, 0)}, child: [((9, 0), D)] }
collect value for 7 0, D --> LightPathMap { paths: {(7, 0), (8, 0), (9, 0)}, child: [((8, 0), D), ((9, 0), D)] }
collect value for 6 0, D --> LightPathMap { paths: {(7, 0), (8, 0), (9, 0), (6, 0)}, child: [((7, 0), D), ((8, 0), D), ((9, 0), D)] }
collect value for 5 0, D --> LightPathMap { paths: {(6, 0), (7, 0), (8, 0), (5, 0), (9, 0)}, child: [((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)] }
collect value for 4 0, D --> LightPathMap { paths: {(9, 0), (4, 0), (6, 0), (7, 0), (5, 0), (8, 0)}, child: [((5, 0), D), ((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)] }
collect value for 3 0, D --> LightPathMap { paths: {(5, 0), (6, 0), (4, 0), (7, 0), (8, 0), (3, 0), (9, 0)}, child: [((4, 0), D), ((5, 0), D), ((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)] }
collect value for 2 0, D --> LightPathMap { paths: {(5, 0), (8, 0), (2, 0), (7, 0), (6, 0), (9, 0), (3, 0), (4, 0)}, child: [((3, 0), D), ((4, 0), D), ((5, 0), D), ((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)] }
collect value for 1 0, D --> LightPathMap { paths: {(6, 0), (3, 0), (2, 0), (8, 0), (9, 0), (1, 0), (4, 0), (5, 0), (7, 0)}, child: [((2, 0), D), ((3, 0), D), ((4, 0), D), ((5, 0), D), ((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)] }
collect value for 0 0, D --> LightPathMap { paths: {(0, 0), (3, 0), (2, 0), (5, 0), (7, 0), (9, 0), (8, 0), (4, 0), (6, 0), (1, 0)}, child: [((1, 0), D), ((2, 0), D), ((3, 0), D), ((4, 0), D), ((5, 0), D), ((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)] }
--> collected Some(LightPathMap { paths: {(0, 0), (3, 0), (2, 0), (5, 0), (7, 0), (9, 0), (8, 0), (4, 0), (6, 0), (1, 0)}, child: [((1, 0), D), ((2, 0), D), ((3, 0), D), ((4, 0), D), ((5, 0), D), ((6, 0), D), ((7, 0), D), ((8, 0), D), ((9, 0), D)] }) 1023
process at (0, 0, D)
--> ((0, 0), L) 1 1 
processing LightPath { path: [((0, 0), L)], stop: true, found: false, child: [] }
collect value for 0 0, L --> LightPathMap { paths: {(0, 0)}, child: [] }
--> collected Some(LightPathMap { paths: {(0, 0)}, child: [] }) 1
process at (0, 0, L)
--> ((0, 0), R) 51 46 
processing LightPath { path: [((0, 0), R), ((0, 1), R)], stop: true, found: false, child: [((1, 1), D)] }
collect value for 0 1, R --> LightPathMap { paths: {(6, 7), (0, 1), (9, 1), (8, 7), (8, 3), (1, 1), (8, 2), (6, 1), (4, 1), (7, 6), (6, 6), (2, 1), (0, 4), (0, 2), (5, 5), (2, 8), (2, 9), (7, 3), (7, 7), (4, 5), (7, 1), (7, 0), (1, 5), (9, 5), (4, 6), (0, 3), (8, 5), (2, 7), (8, 4), (5, 1), (2, 5), (0, 5), (7, 2), (8, 6), (7, 4), (2, 6), (7, 5), (3, 1), (6, 5), (8, 1), (5, 6), (9, 7), (6, 4), (3, 6), (3, 5)}, child: [] }
collect value for 0 0, R --> LightPathMap { paths: {(7, 0), (7, 2), (7, 3), (7, 6), (8, 6), (6, 1), (8, 2), (3, 6), (2, 6), (0, 3), (4, 5), (5, 5), (2, 7), (2, 8), (2, 9), (7, 7), (1, 1), (0, 4), (0, 0), (8, 7), (7, 5), (1, 5), (6, 7), (9, 7), (2, 5), (0, 1), (0, 5), (8, 1), (7, 4), (5, 6), (9, 5), (3, 1), (7, 1), (4, 1), (6, 5), (6, 6), (8, 3), (5, 1), (8, 4), (6, 4), (8, 5), (9, 1), (4, 6), (2, 1), (0, 2), (3, 5)}, child: [((0, 1), R)] }
processing LightPath { path: [((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)], stop: true, found: false, child: [((7, 0), L), ((7, 2), R)] }
collect value for 7 1, D --> LightPathMap { paths: {(6, 6), (3, 5), (9, 5), (3, 6), (4, 6), (8, 3), (8, 2), (7, 6), (4, 1), (8, 4), (3, 1), (7, 1), (7, 4), (2, 7), (7, 3), (6, 4), (8, 5), (2, 5), (6, 7), (8, 7), (0, 1), (4, 5), (0, 3), (6, 5), (9, 1), (1, 5), (7, 2), (0, 2), (2, 8), (8, 6), (0, 4), (5, 6), (2, 9), (2, 1), (1, 1), (9, 7), (7, 7), (5, 1), (7, 0), (0, 5), (8, 1), (5, 5), (6, 1), (7, 5), (2, 6)}, child: [] }
collect value for 6 1, D --> LightPathMap { paths: {(1, 1), (7, 2), (4, 5), (8, 1), (9, 5), (8, 3), (3, 5), (8, 6), (7, 7), (7, 0), (9, 7), (6, 4), (9, 1), (0, 4), (8, 5), (7, 6), (8, 4), (0, 2), (2, 6), (2, 1), (5, 5), (2, 8), (0, 1), (3, 6), (2, 9), (4, 6), (6, 1), (4, 1), (6, 6), (0, 5), (8, 7), (7, 5), (3, 1), (5, 1), (2, 7), (7, 4), (7, 1), (6, 5), (8, 2), (6, 7), (5, 6), (2, 5), (1, 5), (0, 3), (7, 3)}, child: [((7, 1), D)] }
collect value for 5 1, D --> LightPathMap { paths: {(9, 5), (4, 5), (0, 3), (7, 1), (5, 5), (0, 5), (5, 1), (7, 7), (0, 2), (7, 6), (4, 6), (3, 5), (0, 4), (0, 1), (2, 5), (8, 7), (6, 7), (8, 3), (8, 1), (5, 6), (7, 0), (1, 5), (7, 2), (7, 3), (7, 4), (8, 2), (8, 4), (4, 1), (2, 8), (9, 7), (2, 1), (6, 6), (6, 5), (2, 6), (1, 1), (3, 1), (3, 6), (7, 5), (2, 7), (2, 9), (6, 1), (9, 1), (8, 6), (8, 5), (6, 4)}, child: [((6, 1), D), ((7, 1), D)] }
collect value for 4 1, D --> LightPathMap { paths: {(8, 7), (8, 4), (9, 5), (3, 6), (0, 5), (3, 5), (7, 1), (9, 1), (4, 6), (4, 5), (0, 3), (5, 1), (7, 5), (2, 8), (9, 7), (1, 5), (8, 6), (6, 7), (2, 6), (6, 1), (7, 7), (8, 5), (5, 5), (2, 7), (6, 6), (7, 6), (2, 1), (7, 2), (3, 1), (6, 5), (1, 1), (8, 2), (7, 0), (0, 4), (7, 3), (0, 1), (7, 4), (6, 4), (2, 5), (2, 9), (4, 1), (5, 6), (8, 1), (8, 3), (0, 2)}, child: [((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 3 1, D --> LightPathMap { paths: {(3, 5), (6, 6), (5, 1), (5, 5), (5, 6), (2, 6), (2, 7), (4, 1), (7, 5), (8, 5), (7, 3), (8, 3), (9, 1), (0, 5), (1, 5), (1, 1), (2, 1), (7, 0), (6, 5), (8, 1), (4, 6), (8, 2), (0, 4), (0, 2), (0, 1), (3, 1), (6, 1), (2, 9), (3, 6), (4, 5), (8, 6), (0, 3), (2, 5), (7, 4), (6, 4), (7, 2), (8, 4), (2, 8), (9, 5), (9, 7), (7, 1), (7, 7), (6, 7), (7, 6), (8, 7)}, child: [((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 2 1, D --> LightPathMap { paths: {(5, 6), (6, 4), (7, 5), (7, 2), (7, 1), (6, 6), (2, 1), (0, 2), (8, 5), (7, 7), (8, 1), (0, 1), (4, 5), (9, 1), (5, 5), (2, 7), (3, 1), (6, 7), (6, 5), (2, 5), (0, 4), (5, 1), (8, 7), (6, 1), (8, 6), (2, 6), (2, 8), (0, 3), (0, 5), (4, 6), (8, 3), (8, 2), (2, 9), (7, 4), (7, 6), (8, 4), (7, 0), (4, 1), (3, 6), (7, 3), (1, 5), (1, 1), (3, 5), (9, 5), (9, 7)}, child: [((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 1 1, D --> LightPathMap { paths: {(7, 5), (8, 2), (6, 7), (2, 5), (4, 6), (9, 5), (5, 1), (7, 3), (7, 2), (2, 8), (2, 9), (8, 4), (2, 1), (7, 6), (8, 3), (2, 7), (0, 5), (2, 6), (3, 5), (3, 6), (7, 4), (0, 1), (4, 5), (5, 5), (5, 6), (7, 1), (7, 0), (1, 5), (4, 1), (9, 1), (6, 6), (6, 4), (0, 3), (6, 1), (1, 1), (3, 1), (6, 5), (8, 7), (0, 2), (9, 7), (8, 1), (8, 5), (7, 7), (0, 4), (8, 6)}, child: [((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
processing LightPath { path: [((7, 0), L)], stop: true, found: false, child: [] }
collect value for 7 0, L --> LightPathMap { paths: {(7, 0)}, child: [] }
processing LightPath { path: [((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D)], stop: true, found: false, child: [((8, 5), L), ((8, 7), R)] }
collect value for 8 6, D --> LightPathMap { paths: {(2, 5), (6, 4), (2, 8), (8, 3), (6, 7), (7, 1), (2, 1), (5, 6), (3, 6), (4, 1), (9, 5), (8, 6), (7, 4), (8, 7), (3, 1), (9, 1), (5, 1), (1, 1), (7, 6), (6, 6), (6, 5), (8, 5), (4, 6), (0, 1), (2, 6), (4, 5), (5, 5), (8, 1), (7, 0), (1, 5), (7, 7), (0, 3), (3, 5), (7, 5), (6, 1), (8, 2), (7, 3), (8, 4), (9, 7), (0, 5), (2, 7), (2, 9), (0, 2), (0, 4), (7, 2)}, child: [((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 7 6, D --> LightPathMap { paths: {(9, 1), (6, 5), (6, 7), (2, 1), (4, 5), (1, 5), (8, 6), (8, 4), (4, 6), (0, 4), (2, 7), (2, 8), (6, 6), (8, 3), (0, 5), (4, 1), (5, 5), (3, 5), (7, 2), (7, 1), (8, 5), (8, 2), (7, 0), (0, 3), (7, 5), (2, 9), (9, 7), (8, 1), (6, 4), (3, 6), (7, 3), (1, 1), (2, 6), (0, 1), (7, 6), (5, 1), (7, 7), (3, 1), (8, 7), (0, 2), (5, 6), (2, 5), (9, 5), (6, 1), (7, 4)}, child: [((8, 6), D), ((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 6 6, R --> LightPathMap { paths: {(2, 7), (7, 2), (5, 6), (0, 3), (0, 1), (7, 4), (1, 1), (3, 5), (4, 5), (9, 7), (8, 5), (4, 6), (1, 5), (4, 1), (2, 9), (5, 5), (8, 4), (9, 1), (0, 5), (8, 3), (2, 6), (0, 4), (2, 5), (6, 1), (3, 6), (2, 8), (2, 1), (6, 4), (7, 0), (8, 1), (8, 7), (6, 7), (3, 1), (5, 1), (8, 2), (7, 3), (8, 6), (0, 2), (6, 6), (7, 6), (7, 1), (6, 5), (7, 7), (7, 5), (9, 5)}, child: [((7, 6), D), ((8, 6), D), ((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 6 5, R --> LightPathMap { paths: {(8, 5), (9, 1), (6, 6), (6, 7), (2, 6), (6, 4), (8, 1), (7, 2), (0, 2), (3, 5), (0, 1), (2, 5), (5, 6), (3, 6), (7, 3), (0, 5), (8, 7), (5, 1), (2, 1), (2, 9), (0, 4), (0, 3), (7, 4), (7, 0), (7, 5), (8, 6), (4, 6), (9, 5), (4, 5), (2, 8), (8, 3), (6, 5), (5, 5), (8, 4), (8, 2), (1, 1), (2, 7), (9, 7), (1, 5), (3, 1), (7, 7), (7, 1), (4, 1), (7, 6), (6, 1)}, child: [((6, 6), R), ((7, 6), D), ((8, 6), D), ((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 6 4, U --> LightPathMap { paths: {(5, 1), (7, 2), (7, 3), (8, 3), (9, 7), (4, 5), (7, 5), (0, 3), (2, 1), (5, 5), (0, 5), (8, 6), (8, 7), (6, 7), (4, 6), (2, 5), (0, 4), (1, 5), (2, 7), (0, 1), (2, 8), (6, 4), (2, 9), (6, 6), (8, 4), (8, 1), (2, 6), (8, 5), (7, 7), (5, 6), (3, 6), (3, 5), (7, 1), (4, 1), (1, 1), (6, 1), (0, 2), (7, 4), (9, 1), (7, 0), (8, 2), (3, 1), (9, 5), (6, 5), (7, 6)}, child: [((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 7 4, R --> LightPathMap { paths: {(7, 4), (8, 5), (5, 6), (0, 5), (5, 5), (3, 6), (0, 2), (4, 6), (7, 2), (8, 2), (8, 4), (0, 1), (4, 1), (8, 1), (2, 7), (7, 5), (7, 6), (7, 1), (1, 1), (3, 1), (7, 7), (2, 9), (1, 5), (0, 4), (3, 5), (2, 6), (6, 5), (8, 3), (0, 3), (7, 0), (8, 6), (9, 5), (2, 5), (6, 6), (6, 1), (2, 1), (6, 4), (7, 3), (4, 5), (9, 7), (2, 8), (6, 7), (5, 1), (9, 1), (8, 7)}, child: [((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 7 3, R --> LightPathMap { paths: {(4, 5), (0, 3), (2, 8), (1, 1), (0, 5), (9, 1), (0, 1), (2, 9), (7, 2), (1, 5), (7, 1), (3, 1), (2, 5), (2, 7), (0, 2), (6, 6), (7, 0), (6, 4), (8, 6), (4, 1), (9, 7), (8, 2), (5, 5), (8, 5), (4, 6), (8, 3), (0, 4), (7, 6), (7, 4), (7, 3), (6, 1), (7, 5), (8, 4), (8, 1), (7, 7), (8, 7), (6, 7), (3, 5), (3, 6), (9, 5), (5, 1), (5, 6), (6, 5), (2, 6), (2, 1)}, child: [((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 7 2, R --> LightPathMap { paths: {(7, 3), (2, 7), (9, 7), (7, 5), (2, 5), (9, 1), (7, 7), (8, 5), (5, 1), (3, 6), (8, 2), (8, 6), (7, 2), (9, 5), (1, 1), (7, 0), (1, 5), (8, 7), (6, 6), (4, 1), (2, 9), (3, 1), (0, 4), (7, 1), (6, 5), (7, 6), (8, 4), (0, 5), (6, 7), (7, 4), (0, 3), (4, 6), (6, 4), (0, 1), (2, 1), (3, 5), (4, 5), (8, 1), (5, 5), (2, 8), (5, 6), (8, 3), (6, 1), (2, 6), (0, 2)}, child: [((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((7, 0), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
processing LightPath { path: [((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L)], stop: true, found: false, child: [((7, 1), U), ((9, 1), D)] }
collect value for 8 1, L --> LightPathMap { paths: {(7, 0), (7, 7), (2, 5), (2, 6), (0, 3), (6, 4), (0, 5), (6, 5), (8, 4), (8, 5), (5, 5), (2, 9), (3, 6), (2, 1), (6, 6), (7, 1), (7, 2), (7, 6), (0, 2), (4, 1), (8, 3), (2, 7), (8, 1), (8, 2), (8, 7), (2, 8), (7, 4), (5, 6), (0, 4), (4, 6), (8, 6), (0, 1), (5, 1), (3, 5), (9, 1), (3, 1), (7, 3), (6, 1), (9, 7), (7, 5), (6, 7), (1, 1), (1, 5), (9, 5), (4, 5)}, child: [((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 8 2, L --> LightPathMap { paths: {(2, 9), (6, 5), (8, 4), (8, 7), (4, 6), (2, 5), (2, 1), (3, 5), (0, 1), (0, 2), (0, 5), (6, 1), (2, 7), (8, 1), (0, 3), (5, 6), (7, 1), (9, 7), (1, 5), (6, 7), (7, 5), (7, 0), (9, 1), (8, 3), (6, 6), (7, 3), (4, 5), (9, 5), (7, 6), (7, 7), (7, 4), (2, 6), (4, 1), (1, 1), (8, 2), (0, 4), (3, 1), (8, 5), (8, 6), (6, 4), (2, 8), (5, 1), (7, 2), (3, 6), (5, 5)}, child: [((8, 1), L), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 8 3, L --> LightPathMap { paths: {(2, 1), (2, 9), (8, 2), (7, 2), (6, 4), (2, 6), (3, 1), (4, 1), (0, 4), (3, 5), (4, 6), (6, 6), (5, 1), (8, 3), (6, 7), (4, 5), (7, 5), (7, 1), (2, 5), (2, 8), (6, 5), (9, 1), (7, 3), (5, 5), (8, 7), (1, 5), (0, 3), (0, 2), (5, 6), (8, 6), (7, 6), (8, 5), (0, 1), (2, 7), (9, 7), (7, 0), (7, 7), (6, 1), (8, 1), (8, 4), (1, 1), (7, 4), (3, 6), (0, 5), (9, 5)}, child: [((8, 2), L), ((8, 1), L), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 8 4, L --> LightPathMap { paths: {(3, 5), (4, 6), (0, 3), (8, 6), (7, 5), (2, 6), (2, 5), (2, 9), (8, 3), (7, 1), (5, 1), (5, 5), (8, 2), (3, 1), (6, 4), (2, 7), (8, 4), (4, 1), (0, 5), (7, 0), (2, 1), (7, 6), (8, 7), (6, 1), (1, 5), (0, 1), (2, 8), (0, 2), (6, 7), (9, 1), (6, 5), (4, 5), (7, 3), (9, 7), (7, 4), (8, 1), (3, 6), (8, 5), (7, 7), (5, 6), (9, 5), (6, 6), (7, 2), (0, 4), (1, 1)}, child: [((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
collect value for 8 5, L --> LightPathMap { paths: {(0, 1), (1, 1), (6, 4), (2, 7), (3, 1), (9, 7), (9, 1), (5, 6), (7, 7), (2, 5), (7, 3), (6, 5), (7, 0), (7, 6), (0, 3), (7, 2), (8, 5), (6, 1), (4, 6), (7, 1), (8, 7), (8, 6), (0, 2), (8, 1), (2, 8), (1, 5), (5, 5), (2, 1), (3, 5), (3, 6), (6, 7), (5, 1), (0, 5), (8, 3), (2, 9), (9, 5), (8, 4), (7, 4), (2, 6), (4, 1), (4, 5), (0, 4), (8, 2), (7, 5), (6, 6)}, child: [((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D)] }
processing LightPath { path: [((8, 7), R)], stop: true, found: false, child: [((7, 7), U), ((9, 7), D)] }
collect value for 8 7, R --> LightPathMap { paths: {(7, 2), (6, 4), (4, 1), (9, 1), (8, 1), (6, 1), (2, 6), (8, 3), (2, 7), (2, 5), (5, 6), (4, 5), (1, 5), (0, 4), (2, 1), (7, 3), (0, 1), (0, 5), (0, 2), (8, 7), (4, 6), (3, 6), (8, 6), (3, 1), (0, 3), (8, 5), (3, 5), (7, 7), (7, 1), (7, 5), (9, 5), (2, 8), (9, 7), (5, 5), (1, 1), (6, 5), (7, 4), (6, 6), (6, 7), (7, 0), (5, 1), (7, 6), (8, 4), (8, 2), (2, 9)}, child: [((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L)] }
processing LightPath { path: [((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U)], stop: true, found: false, child: [((2, 5), L), ((2, 7), R)] }
collect value for 2 6, U --> LightPathMap { paths: {(7, 6), (3, 1), (7, 7), (3, 6), (0, 3), (8, 6), (2, 7), (0, 2), (6, 6), (8, 3), (5, 5), (7, 3), (8, 7), (7, 4), (1, 1), (5, 6), (9, 7), (8, 5), (2, 5), (1, 5), (2, 6), (8, 4), (0, 1), (8, 2), (7, 5), (6, 4), (7, 2), (6, 7), (2, 8), (0, 4), (9, 5), (8, 1), (4, 6), (7, 1), (3, 5), (5, 1), (4, 1), (6, 5), (4, 5), (2, 1), (2, 9), (9, 1), (6, 1), (0, 5), (7, 0)}, child: [((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R)] }
collect value for 3 6, U --> LightPathMap { paths: {(2, 5), (7, 4), (8, 3), (9, 1), (2, 1), (1, 1), (0, 5), (8, 2), (2, 9), (9, 7), (0, 1), (2, 8), (0, 4), (2, 6), (5, 1), (6, 7), (7, 1), (7, 0), (7, 2), (6, 1), (8, 7), (5, 5), (7, 5), (3, 5), (6, 5), (8, 5), (7, 3), (0, 2), (8, 1), (6, 4), (4, 6), (8, 6), (7, 7), (5, 6), (2, 7), (4, 1), (3, 6), (3, 1), (4, 5), (9, 5), (8, 4), (0, 3), (1, 5), (7, 6), (6, 6)}, child: [((2, 6), U), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R)] }
collect value for 4 6, U --> LightPathMap { paths: {(9, 7), (3, 5), (3, 1), (7, 1), (5, 5), (3, 6), (9, 1), (7, 2), (6, 6), (7, 5), (2, 8), (7, 4), (2, 6), (1, 5), (0, 3), (7, 6), (0, 2), (8, 1), (5, 6), (0, 5), (2, 7), (4, 6), (0, 1), (2, 9), (5, 1), (2, 5), (6, 4), (6, 5), (8, 2), (9, 5), (7, 0), (7, 3), (4, 1), (2, 1), (8, 6), (0, 4), (8, 3), (7, 7), (8, 7), (6, 7), (6, 1), (4, 5), (8, 4), (8, 5), (1, 1)}, child: [((3, 6), U), ((2, 6), U), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R)] }
collect value for 5 6, U --> LightPathMap { paths: {(0, 1), (8, 3), (0, 5), (0, 3), (3, 6), (8, 6), (4, 6), (6, 7), (2, 6), (0, 4), (5, 1), (7, 2), (7, 3), (2, 8), (7, 4), (5, 6), (8, 1), (7, 0), (1, 1), (3, 1), (8, 2), (4, 5), (9, 5), (0, 2), (4, 1), (7, 1), (1, 5), (2, 5), (5, 5), (8, 4), (6, 4), (9, 7), (7, 5), (6, 6), (2, 7), (6, 1), (6, 5), (9, 1), (3, 5), (8, 5), (7, 7), (2, 9), (2, 1), (7, 6), (8, 7)}, child: [((4, 6), U), ((3, 6), U), ((2, 6), U), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R)] }
collect value for 6 6, L --> LightPathMap { paths: {(3, 1), (2, 9), (7, 7), (0, 2), (6, 5), (4, 1), (5, 6), (7, 3), (0, 4), (7, 6), (6, 4), (8, 6), (2, 7), (4, 6), (8, 1), (8, 2), (8, 5), (9, 7), (3, 5), (3, 6), (0, 1), (9, 1), (5, 5), (7, 4), (2, 5), (0, 3), (7, 1), (2, 6), (7, 0), (2, 8), (8, 3), (6, 7), (9, 5), (8, 7), (7, 2), (7, 5), (2, 1), (6, 1), (8, 4), (1, 5), (1, 1), (0, 5), (5, 1), (4, 5), (6, 6)}, child: [((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R)] }
collect value for 6 7, U --> LightPathMap { paths: {(6, 1), (7, 1), (7, 3), (5, 5), (1, 1), (0, 5), (2, 7), (2, 5), (1, 5), (7, 5), (9, 5), (4, 6), (3, 1), (0, 1), (8, 7), (9, 1), (3, 5), (0, 4), (8, 3), (4, 5), (8, 1), (4, 1), (7, 0), (2, 6), (7, 4), (0, 3), (0, 2), (7, 7), (7, 6), (2, 9), (5, 1), (6, 7), (6, 5), (8, 6), (6, 6), (3, 6), (2, 1), (7, 2), (2, 8), (5, 6), (8, 4), (9, 7), (6, 4), (8, 2), (8, 5)}, child: [((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R)] }
collect value for 7 7, U --> LightPathMap { paths: {(4, 1), (7, 6), (8, 3), (8, 7), (7, 4), (7, 3), (7, 0), (7, 5), (5, 5), (8, 6), (7, 2), (6, 6), (6, 1), (7, 7), (1, 5), (9, 1), (0, 5), (3, 6), (7, 1), (4, 6), (2, 1), (5, 1), (0, 3), (1, 1), (8, 1), (9, 7), (3, 5), (2, 7), (0, 4), (6, 4), (6, 5), (8, 2), (0, 1), (2, 6), (9, 5), (4, 5), (2, 9), (2, 5), (6, 7), (0, 2), (3, 1), (5, 6), (2, 8), (8, 5), (8, 4)}, child: [((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R)] }
processing LightPath { path: [((9, 7), D)], stop: true, found: false, child: [] }
collect value for 9 7, D --> LightPathMap { paths: {(9, 7)}, child: [] }
processing LightPath { path: [((7, 1), U)], stop: true, found: false, child: [((7, 0), L), ((7, 2), R)] }
collect value for 7 1, U --> LightPathMap { paths: {(1, 1), (4, 1), (3, 5), (0, 3), (0, 1), (6, 6), (8, 5), (5, 1), (4, 5), (1, 5), (6, 1), (4, 6), (7, 3), (8, 2), (2, 7), (0, 5), (7, 7), (7, 0), (8, 4), (5, 5), (3, 1), (2, 6), (2, 1), (6, 5), (9, 1), (6, 7), (0, 2), (7, 5), (9, 7), (0, 4), (5, 6), (2, 8), (2, 9), (7, 2), (8, 6), (8, 3), (3, 6), (2, 5), (9, 5), (7, 1), (8, 1), (7, 6), (8, 7), (7, 4), (6, 4)}, child: [((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((9, 7), D)] }
processing LightPath { path: [((9, 1), D)], stop: true, found: false, child: [] }
collect value for 9 1, D --> LightPathMap { paths: {(9, 1)}, child: [] }
processing LightPath { path: [((2, 5), L)], stop: true, found: false, child: [((1, 5), U), ((3, 5), D)] }
collect value for 2 5, L --> LightPathMap { paths: {(5, 6), (2, 9), (6, 5), (6, 7), (7, 6), (6, 1), (7, 0), (3, 6), (0, 1), (7, 4), (2, 8), (8, 3), (2, 5), (0, 4), (8, 7), (2, 7), (3, 5), (4, 5), (4, 1), (2, 1), (8, 2), (6, 4), (8, 5), (0, 3), (7, 7), (7, 2), (1, 5), (3, 1), (7, 1), (0, 2), (2, 6), (9, 7), (5, 5), (7, 5), (8, 6), (6, 6), (0, 5), (9, 5), (8, 1), (8, 4), (5, 1), (4, 6), (1, 1), (7, 3), (9, 1)}, child: [((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 1), U), ((9, 1), D), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((9, 7), D)] }
processing LightPath { path: [((2, 7), R), ((2, 8), R), ((2, 9), R)], stop: true, found: false, child: [] }
collect value for 2 9, R --> LightPathMap { paths: {(2, 9)}, child: [] }
collect value for 2 8, R --> LightPathMap { paths: {(2, 8), (2, 9)}, child: [((2, 9), R)] }
collect value for 2 7, R --> LightPathMap { paths: {(2, 8), (2, 9), (2, 7)}, child: [((2, 8), R), ((2, 9), R)] }
processing LightPath { path: [((1, 5), U), ((0, 5), U), ((0, 4), L), ((0, 3), L), ((0, 2), L), ((0, 1), L)], stop: true, found: false, child: [((1, 1), D)] }
collect value for 0 1, L --> LightPathMap { paths: {(7, 2), (7, 4), (0, 1), (7, 3), (9, 5), (3, 1), (2, 7), (9, 7), (2, 9), (8, 5), (6, 6), (7, 7), (5, 6), (3, 6), (9, 1), (6, 5), (5, 1), (2, 6), (0, 5), (8, 2), (2, 1), (2, 8), (1, 5), (7, 5), (4, 6), (8, 4), (4, 5), (8, 3), (2, 5), (6, 1), (4, 1), (8, 1), (7, 0), (0, 4), (1, 1), (8, 6), (6, 4), (8, 7), (0, 3), (7, 1), (0, 2), (7, 6), (3, 5), (5, 5), (6, 7)}, child: [((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 1), U), ((9, 1), D), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((2, 5), L), ((2, 7), R), ((2, 8), R), ((2, 9), R), ((9, 7), D)] }
collect value for 0 2, L --> LightPathMap { paths: {(2, 9), (1, 1), (7, 0), (0, 1), (6, 5), (7, 4), (2, 6), (9, 1), (2, 5), (7, 3), (8, 3), (6, 7), (5, 5), (9, 5), (7, 2), (2, 7), (7, 7), (2, 8), (4, 1), (3, 1), (1, 5), (5, 6), (0, 4), (4, 6), (7, 6), (2, 1), (8, 1), (5, 1), (7, 1), (6, 1), (8, 6), (8, 4), (3, 5), (8, 7), (6, 4), (0, 2), (9, 7), (6, 6), (8, 5), (8, 2), (0, 5), (4, 5), (0, 3), (7, 5), (3, 6)}, child: [((0, 1), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 1), U), ((9, 1), D), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((2, 5), L), ((2, 7), R), ((2, 8), R), ((2, 9), R), ((9, 7), D)] }
collect value for 0 3, L --> LightPathMap { paths: {(2, 1), (8, 4), (5, 5), (0, 2), (8, 1), (8, 3), (0, 5), (2, 9), (6, 4), (8, 6), (7, 6), (8, 5), (7, 2), (2, 7), (7, 0), (6, 1), (3, 5), (8, 7), (3, 6), (0, 1), (1, 1), (3, 1), (6, 6), (6, 5), (6, 7), (2, 8), (4, 1), (2, 5), (7, 1), (7, 3), (7, 4), (0, 3), (7, 7), (9, 1), (4, 6), (5, 1), (5, 6), (1, 5), (4, 5), (8, 2), (7, 5), (9, 5), (9, 7), (2, 6), (0, 4)}, child: [((0, 2), L), ((0, 1), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 1), U), ((9, 1), D), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((2, 5), L), ((2, 7), R), ((2, 8), R), ((2, 9), R), ((9, 7), D)] }
collect value for 0 4, L --> LightPathMap { paths: {(5, 5), (4, 5), (7, 0), (4, 1), (7, 4), (6, 5), (6, 6), (8, 7), (5, 6), (2, 5), (8, 2), (9, 5), (1, 1), (6, 7), (0, 5), (8, 5), (8, 3), (8, 1), (2, 6), (9, 7), (7, 1), (7, 6), (3, 6), (2, 7), (6, 4), (7, 7), (2, 9), (0, 4), (2, 1), (0, 2), (7, 5), (6, 1), (0, 3), (4, 6), (3, 1), (8, 6), (1, 5), (7, 2), (3, 5), (5, 1), (7, 3), (0, 1), (8, 4), (9, 1), (2, 8)}, child: [((0, 3), L), ((0, 2), L), ((0, 1), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 1), U), ((9, 1), D), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((2, 5), L), ((2, 7), R), ((2, 8), R), ((2, 9), R), ((9, 7), D)] }
collect value for 0 5, U --> LightPathMap { paths: {(7, 0), (0, 5), (7, 3), (6, 7), (7, 2), (8, 4), (8, 6), (2, 1), (9, 1), (5, 6), (3, 1), (3, 5), (0, 3), (7, 1), (6, 5), (5, 1), (2, 5), (4, 1), (6, 6), (2, 7), (1, 1), (2, 9), (9, 7), (7, 4), (0, 4), (7, 6), (8, 5), (8, 3), (8, 2), (8, 1), (4, 6), (2, 6), (8, 7), (1, 5), (4, 5), (7, 5), (2, 8), (5, 5), (6, 4), (7, 7), (6, 1), (9, 5), (0, 2), (3, 6), (0, 1)}, child: [((0, 4), L), ((0, 3), L), ((0, 2), L), ((0, 1), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 1), U), ((9, 1), D), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((2, 5), L), ((2, 7), R), ((2, 8), R), ((2, 9), R), ((9, 7), D)] }
collect value for 1 5, U --> LightPathMap { paths: {(5, 6), (7, 1), (1, 1), (6, 4), (6, 6), (7, 3), (2, 6), (7, 6), (4, 1), (2, 5), (0, 4), (7, 2), (2, 8), (0, 2), (2, 9), (9, 7), (2, 1), (7, 4), (3, 1), (4, 6), (8, 3), (6, 1), (3, 6), (0, 1), (5, 1), (8, 4), (9, 5), (9, 1), (8, 5), (8, 7), (6, 7), (0, 5), (8, 6), (1, 5), (3, 5), (6, 5), (5, 5), (7, 7), (4, 5), (7, 5), (2, 7), (0, 3), (8, 2), (8, 1), (7, 0)}, child: [((0, 5), U), ((0, 4), L), ((0, 3), L), ((0, 2), L), ((0, 1), L), ((1, 1), D), ((2, 1), D), ((3, 1), D), ((4, 1), D), ((5, 1), D), ((6, 1), D), ((7, 1), D), ((7, 0), L), ((7, 2), R), ((7, 3), R), ((7, 4), R), ((6, 4), U), ((6, 5), R), ((6, 6), R), ((7, 6), D), ((8, 6), D), ((8, 5), L), ((8, 4), L), ((8, 3), L), ((8, 2), L), ((8, 1), L), ((7, 1), U), ((9, 1), D), ((8, 7), R), ((7, 7), U), ((6, 7), U), ((6, 6), L), ((5, 6), U), ((4, 6), U), ((3, 6), U), ((2, 6), U), ((2, 5), L), ((2, 7), R), ((2, 8), R), ((2, 9), R), ((9, 7), D)] }
processing LightPath { path: [((3, 5), D), ((4, 5), D), ((5, 5), D), ((6, 5), D), ((7, 5), D), ((8, 5), D), ((9, 5), D)], stop: true, found: false, child: [] }
collect value for 9 5, D --> LightPathMap { paths: {(9, 5)}, child: [] }
collect value for 8 5, D --> LightPathMap { paths: {(8, 5), (9, 5)}, child: [((9, 5), D)] }
collect value for 7 5, D --> LightPathMap { paths: {(8, 5), (7, 5), (9, 5)}, child: [((8, 5), D), ((9, 5), D)] }
collect value for 6 5, D --> LightPathMap { paths: {(8, 5), (7, 5), (9, 5), (6, 5)}, child: [((7, 5), D), ((8, 5), D), ((9, 5), D)] }
collect value for 5 5, D --> LightPathMap { paths: {(7, 5), (6, 5), (5, 5), (8, 5), (9, 5)}, child: [((6, 5), D), ((7, 5), D), ((8, 5), D), ((9, 5), D)] }
collect value for 4 5, D --> LightPathMap { paths: {(7, 5), (6, 5), (4, 5), (8, 5), (9, 5), (5, 5)}, child: [((5, 5), D), ((6, 5), D), ((7, 5), D), ((8, 5), D), ((9, 5), D)] }
collect value for 3 5, D --> LightPathMap { paths: {(8, 5), (6, 5), (9, 5), (7, 5), (3, 5), (4, 5), (5, 5)}, child: [((4, 5), D), ((5, 5), D), ((6, 5), D), ((7, 5), D), ((8, 5), D), ((9, 5), D)] }
--> collected Some(LightPathMap { paths: {(7, 0), (7, 2), (7, 3), (7, 6), (8, 6), (6, 1), (8, 2), (3, 6), (2, 6), (0, 3), (4, 5), (5, 5), (2, 7), (2, 8), (2, 9), (7, 7), (1, 1), (0, 4), (0, 0), (8, 7), (7, 5), (1, 5), (6, 7), (9, 7), (2, 5), (0, 1), (0, 5), (8, 1), (7, 4), (5, 6), (9, 5), (3, 1), (7, 1), (4, 1), (6, 5), (6, 6), (8, 3), (5, 1), (8, 4), (6, 4), (8, 5), (9, 1), (4, 6), (2, 1), (0, 2), (3, 5)}, child: [((0, 1), R)] }) 91
process at (0, 0, R)
--> ((0, 1), U) 1 1 
processing LightPath { path: [((0, 1), U)], stop: true, found: false, child: [] }
collect value for 0 1, U --> LightPathMap { paths: {(0, 1)}, child: [] }
--> collected Some(LightPathMap { paths: {(0, 1)}, child: [] }) 1
process at (0, 1, U)
--> ((0, 1), D) 2 2 
processing LightPath { path: [((0, 1), D), ((1, 1), D)], stop: true, found: true, child: [] }
collect value for 0 1, D --> LightPathMap { paths: {(1, 1), (0, 1)}, child: [((1, 1), D)] }
--> collected Some(LightPathMap { paths: {(1, 1), (0, 1)}, child: [((1, 1), D)] }) 2882
process at (0, 1, D)
--> ((0, 1), L) 1 1 
processing LightPath { path: [((0, 1), L)], stop: true, found: true, child: [] }
